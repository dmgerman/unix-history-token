begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  *  Copyright (c) 1998 by the University of Southern California.  *  All rights reserved.  *  *  Permission to use, copy, modify, and distribute this software and  *  its documentation in source and binary forms for lawful  *  purposes and without fee is hereby granted, provided  *  that the above copyright notice appear in all copies and that both  *  the copyright notice and this permission notice appear in supporting  *  documentation, and that any documentation, advertising materials,  *  and other materials related to such distribution and use acknowledge  *  that the software was developed by the University of Southern  *  California and/or Information Sciences Institute.  *  The name of the University of Southern California may not  *  be used to endorse or promote products derived from this software  *  without specific prior written permission.  *  *  THE UNIVERSITY OF SOUTHERN CALIFORNIA DOES NOT MAKE ANY REPRESENTATIONS  *  ABOUT THE SUITABILITY OF THIS SOFTWARE FOR ANY PURPOSE.  THIS SOFTWARE IS  *  PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES,  *  INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF  *  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, TITLE, AND  *  NON-INFRINGEMENT.  *  *  IN NO EVENT SHALL USC, OR ANY OTHER CONTRIBUTOR BE LIABLE FOR ANY  *  SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES, WHETHER IN CONTRACT,  *  TORT, OR OTHER FORM OF ACTION, ARISING OUT OF OR IN CONNECTION WITH,  *  THE USE OR PERFORMANCE OF THIS SOFTWARE.  *  *  Other copyrights might apply to parts of this software and are so  *  noted when applicable.  *  * $FreeBSD$  */
end_comment

begin_comment
comment|/*  Questions concerning this software should be directed to  *  Mickael Hoerdt (hoerdt@clarinet.u-strasbg.fr) LSIIT Strasbourg.  *  */
end_comment

begin_comment
comment|/*  * This program has been derived from pim6dd.  * The pim6dd program is covered by the license in the accompanying file  * named "LICENSE.pim6dd".  */
end_comment

begin_comment
comment|/*  * This program has been derived from pimd.  * The pimd program is covered by the license in the accompanying file  * named "LICENSE.pimd".  *  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|PIM6_PROTO_H
end_ifndef

begin_define
define|#
directive|define
name|PIM6_PROTO_H
end_define

begin_include
include|#
directive|include
file|"defs.h"
end_include

begin_include
include|#
directive|include
file|"vif.h"
end_include

begin_include
include|#
directive|include
file|"mrt.h"
end_include

begin_decl_stmt
specifier|extern
name|build_jp_message_t
modifier|*
name|build_jp_message_pool
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|build_jp_message_pool_counter
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|sockaddr_in6
name|sockaddr6_any
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|sockaddr_in6
name|sockaddr6_d
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|receive_pim6_hello
name|__P
argument_list|(
operator|(
expr|struct
name|sockaddr_in6
operator|*
name|src
operator|,
name|char
operator|*
name|pim_message
operator|,
name|int
name|datalen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|send_pim6_hello
name|__P
argument_list|(
operator|(
expr|struct
name|uvif
operator|*
name|v
operator|,
name|u_int16
name|holdtime
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|delete_pim6_nbr
name|__P
argument_list|(
operator|(
name|pim_nbr_entry_t
operator|*
name|nbr_delete
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|receive_pim6_register
name|__P
argument_list|(
operator|(
expr|struct
name|sockaddr_in6
operator|*
name|src
operator|,
expr|struct
name|sockaddr_in6
operator|*
name|dst
operator|,
name|char
operator|*
name|pim_message
operator|,
name|int
name|datalen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|send_pim6_null_register
name|__P
argument_list|(
operator|(
name|mrtentry_t
operator|*
name|r
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|receive_pim6_register_stop
name|__P
argument_list|(
operator|(
expr|struct
name|sockaddr_in6
operator|*
name|src
operator|,
expr|struct
name|sockaddr_in6
operator|*
name|dst
operator|,
name|char
operator|*
name|pim_message
operator|,
name|int
name|datalen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|send_pim6_register
name|__P
argument_list|(
operator|(
name|char
operator|*
name|pkt
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|receive_pim6_join_prune
name|__P
argument_list|(
operator|(
expr|struct
name|sockaddr_in6
operator|*
name|src
operator|,
expr|struct
name|sockaddr_in6
operator|*
name|dst
operator|,
name|char
operator|*
name|pim_message
operator|,
name|int
name|datalen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|join_or_prune
name|__P
argument_list|(
operator|(
name|mrtentry_t
operator|*
name|mrtentry_ptr
operator|,
name|pim_nbr_entry_t
operator|*
name|upstream_router
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|receive_pim6_assert
name|__P
argument_list|(
operator|(
expr|struct
name|sockaddr_in6
operator|*
name|src
operator|,
expr|struct
name|sockaddr_in6
operator|*
name|dst
operator|,
name|char
operator|*
name|pim_message
operator|,
name|int
name|datalen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|send_pim6_assert
name|__P
argument_list|(
operator|(
expr|struct
name|sockaddr_in6
operator|*
name|source
operator|,
expr|struct
name|sockaddr_in6
operator|*
name|group
operator|,
name|vifi_t
name|vifi
operator|,
name|mrtentry_t
operator|*
name|mrtentry_ptr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|send_periodic_pim6_join_prune
name|__P
argument_list|(
operator|(
name|vifi_t
name|vifi
operator|,
name|pim_nbr_entry_t
operator|*
name|pim_nbr
operator|,
name|u_int16
name|holdtime
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|add_jp_entry
name|__P
argument_list|(
operator|(
name|pim_nbr_entry_t
operator|*
name|pim_nbr
operator|,
name|u_int16
name|holdtime
operator|,
expr|struct
name|sockaddr_in6
operator|*
name|group
operator|,
name|u_int8
name|grp_msklen
operator|,
expr|struct
name|sockaddr_in6
operator|*
name|source
operator|,
name|u_int8
name|src_msklen
operator|,
name|u_int16
name|addr_flags
operator|,
name|u_int8
name|join_prune
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|pack_and_send_jp6_message
name|__P
argument_list|(
operator|(
name|pim_nbr_entry_t
operator|*
name|pim_nbr
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|receive_pim6_cand_rp_adv
name|__P
argument_list|(
operator|(
expr|struct
name|sockaddr_in6
operator|*
name|src
operator|,
expr|struct
name|sockaddr_in6
operator|*
name|dst
operator|,
name|char
operator|*
name|pim_message
operator|,
name|int
name|datalen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|receive_pim6_bootstrap
name|__P
argument_list|(
operator|(
expr|struct
name|sockaddr_in6
operator|*
name|src
operator|,
expr|struct
name|sockaddr_in6
operator|*
name|dst
operator|,
name|char
operator|*
name|pim_message
operator|,
name|int
name|datalen
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|send_pim6_cand_rp_adv
name|__P
argument_list|(
operator|(
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|void
name|send_pim6_bootstrap
name|__P
argument_list|(
operator|(
operator|)
argument_list|)
decl_stmt|;
end_decl_stmt

begin_endif
endif|#
directive|endif
end_endif

end_unit

