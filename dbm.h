begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*	$Id: dbm.h,v 1.1 2016/07/19 21:31:55 schwarze Exp $ */
end_comment

begin_comment
comment|/*  * Copyright (c) 2016 Ingo Schwarze<schwarze@openbsd.org>  *  * Permission to use, copy, modify, and distribute this software for any  * purpose with or without fee is hereby granted, provided that the above  * copyright notice and this permission notice appear in all copies.  *  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  *  * Public interface for the map-based version  * of the mandoc database, for read-only access.  * To be used by dbm*.c, dba_read.c, and man(1) and apropos(1).  */
end_comment

begin_enum
enum|enum
name|dbm_mtype
block|{
name|DBM_EXACT
init|=
literal|0
block|,
name|DBM_SUB
block|,
name|DBM_REGEX
block|}
enum|;
end_enum

begin_struct
struct|struct
name|dbm_match
block|{
name|regex_t
modifier|*
name|re
decl_stmt|;
specifier|const
name|char
modifier|*
name|str
decl_stmt|;
name|enum
name|dbm_mtype
name|type
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dbm_res
block|{
name|int32_t
name|page
decl_stmt|;
name|int32_t
name|bits
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dbm_page
block|{
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
specifier|const
name|char
modifier|*
name|sect
decl_stmt|;
specifier|const
name|char
modifier|*
name|arch
decl_stmt|;
specifier|const
name|char
modifier|*
name|desc
decl_stmt|;
specifier|const
name|char
modifier|*
name|file
decl_stmt|;
name|int32_t
name|addr
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
struct|struct
name|dbm_macro
block|{
specifier|const
name|char
modifier|*
name|value
decl_stmt|;
specifier|const
name|int32_t
modifier|*
name|pp
decl_stmt|;
block|}
struct|;
end_struct

begin_function_decl
name|int
name|dbm_open
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dbm_close
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int32_t
name|dbm_page_count
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|dbm_page
modifier|*
name|dbm_page_get
parameter_list|(
name|int32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dbm_page_byname
parameter_list|(
specifier|const
name|struct
name|dbm_match
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dbm_page_bysect
parameter_list|(
specifier|const
name|struct
name|dbm_match
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dbm_page_byarch
parameter_list|(
specifier|const
name|struct
name|dbm_match
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dbm_page_bydesc
parameter_list|(
specifier|const
name|struct
name|dbm_match
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dbm_page_bymacro
parameter_list|(
name|int32_t
parameter_list|,
specifier|const
name|struct
name|dbm_match
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|dbm_res
name|dbm_page_next
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int32_t
name|dbm_macro_count
parameter_list|(
name|int32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|dbm_macro
modifier|*
name|dbm_macro_get
parameter_list|(
name|int32_t
parameter_list|,
name|int32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|dbm_macro_bypage
parameter_list|(
name|int32_t
parameter_list|,
name|int32_t
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|char
modifier|*
name|dbm_macro_next
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

end_unit

