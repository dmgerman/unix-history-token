begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Copyright 2002 Free Software Foundation, Inc.     This file is part of BFD, the Binary File Descriptor library.     This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.     This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.     You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_undef
undef|#
directive|undef
name|F_LSYMS
end_undef

begin_define
define|#
directive|define
name|F_LSYMS
value|F_LSYMS_TICOFF
end_define

begin_function
specifier|static
name|bfd_boolean
name|ticoff0_bad_format_hook
parameter_list|(
name|abfd
parameter_list|,
name|filehdr
parameter_list|)
name|bfd
modifier|*
name|abfd
decl_stmt|;
name|PTR
name|filehdr
decl_stmt|;
block|{
name|struct
name|internal_filehdr
modifier|*
name|internal_f
init|=
operator|(
expr|struct
name|internal_filehdr
operator|*
operator|)
name|filehdr
decl_stmt|;
if|if
condition|(
name|COFF0_BADMAG
argument_list|(
operator|*
name|internal_f
argument_list|)
condition|)
return|return
name|FALSE
return|;
return|return
name|TRUE
return|;
block|}
end_function

begin_function
specifier|static
name|bfd_boolean
name|ticoff1_bad_format_hook
parameter_list|(
name|abfd
parameter_list|,
name|filehdr
parameter_list|)
name|bfd
modifier|*
name|abfd
name|ATTRIBUTE_UNUSED
decl_stmt|;
name|PTR
name|filehdr
decl_stmt|;
block|{
name|struct
name|internal_filehdr
modifier|*
name|internal_f
init|=
operator|(
expr|struct
name|internal_filehdr
operator|*
operator|)
name|filehdr
decl_stmt|;
if|if
condition|(
name|COFF1_BADMAG
argument_list|(
operator|*
name|internal_f
argument_list|)
condition|)
return|return
name|FALSE
return|;
return|return
name|TRUE
return|;
block|}
end_function

begin_comment
comment|/* Replace the stock _bfd_coff_is_local_label_name    to recognize TI COFF local labels.  */
end_comment

begin_function
specifier|static
name|bfd_boolean
name|ticoff_bfd_is_local_label_name
parameter_list|(
name|abfd
parameter_list|,
name|name
parameter_list|)
name|bfd
modifier|*
name|abfd
name|ATTRIBUTE_UNUSED
decl_stmt|;
specifier|const
name|char
modifier|*
name|name
decl_stmt|;
block|{
if|if
condition|(
name|TICOFF_LOCAL_LABEL_P
argument_list|(
name|name
argument_list|)
condition|)
return|return
name|TRUE
return|;
return|return
name|FALSE
return|;
block|}
end_function

begin_define
define|#
directive|define
name|coff_bfd_is_local_label_name
value|ticoff_bfd_is_local_label_name
end_define

begin_comment
comment|/* Customize coffcode.h; the default coff_ functions are set up to use COFF2;     coff_bad_format_hook uses BADMAG, so set that for COFF2.  The COFF1    and COFF0 vectors use custom _bad_format_hook procs instead of setting    BADMAG.  */
end_comment

begin_define
define|#
directive|define
name|BADMAG
parameter_list|(
name|x
parameter_list|)
value|COFF2_BADMAG(x)
end_define

begin_include
include|#
directive|include
file|"coffcode.h"
end_include

begin_comment
comment|/* COFF0 differs in file/section header size and relocation entry size.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|bfd_coff_backend_data
name|ticoff0_swap_table
init|=
block|{
name|coff_SWAP_aux_in
block|,
name|coff_SWAP_sym_in
block|,
name|coff_SWAP_lineno_in
block|,
name|coff_SWAP_aux_out
block|,
name|coff_SWAP_sym_out
block|,
name|coff_SWAP_lineno_out
block|,
name|coff_SWAP_reloc_out
block|,
name|coff_SWAP_filehdr_out
block|,
name|coff_SWAP_aouthdr_out
block|,
name|coff_SWAP_scnhdr_out
block|,
name|FILHSZ_V0
block|,
name|AOUTSZ
block|,
name|SCNHSZ_V01
block|,
name|SYMESZ
block|,
name|AUXESZ
block|,
name|RELSZ_V0
block|,
name|LINESZ
block|,
name|FILNMLEN
block|,
ifdef|#
directive|ifdef
name|COFF_LONG_FILENAMES
name|TRUE
block|,
else|#
directive|else
name|FALSE
block|,
endif|#
directive|endif
ifdef|#
directive|ifdef
name|COFF_LONG_SECTION_NAMES
name|TRUE
block|,
else|#
directive|else
name|FALSE
block|,
endif|#
directive|endif
name|COFF_DEFAULT_SECTION_ALIGNMENT_POWER
block|,
name|coff_SWAP_filehdr_in
block|,
name|coff_SWAP_aouthdr_in
block|,
name|coff_SWAP_scnhdr_in
block|,
name|coff_SWAP_reloc_in
block|,
name|ticoff0_bad_format_hook
block|,
name|coff_set_arch_mach_hook
block|,
name|coff_mkobject_hook
block|,
name|styp_to_sec_flags
block|,
name|coff_set_alignment_hook
block|,
name|coff_slurp_symbol_table
block|,
name|symname_in_debug_hook
block|,
name|coff_pointerize_aux_hook
block|,
name|coff_print_aux
block|,
name|coff_reloc16_extra_cases
block|,
name|coff_reloc16_estimate
block|,
name|coff_classify_symbol
block|,
name|coff_compute_section_file_positions
block|,
name|coff_start_final_link
block|,
name|coff_relocate_section
block|,
name|coff_rtype_to_howto
block|,
name|coff_adjust_symndx
block|,
name|coff_link_add_one_symbol
block|,
name|coff_link_output_has_begun
block|,
name|coff_final_link_postscript
block|}
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* COFF1 differs in section header size.  */
end_comment

begin_decl_stmt
specifier|static
specifier|const
name|bfd_coff_backend_data
name|ticoff1_swap_table
init|=
block|{
name|coff_SWAP_aux_in
block|,
name|coff_SWAP_sym_in
block|,
name|coff_SWAP_lineno_in
block|,
name|coff_SWAP_aux_out
block|,
name|coff_SWAP_sym_out
block|,
name|coff_SWAP_lineno_out
block|,
name|coff_SWAP_reloc_out
block|,
name|coff_SWAP_filehdr_out
block|,
name|coff_SWAP_aouthdr_out
block|,
name|coff_SWAP_scnhdr_out
block|,
name|FILHSZ
block|,
name|AOUTSZ
block|,
name|SCNHSZ_V01
block|,
name|SYMESZ
block|,
name|AUXESZ
block|,
name|RELSZ
block|,
name|LINESZ
block|,
name|FILNMLEN
block|,
ifdef|#
directive|ifdef
name|COFF_LONG_FILENAMES
name|TRUE
block|,
else|#
directive|else
name|FALSE
block|,
endif|#
directive|endif
ifdef|#
directive|ifdef
name|COFF_LONG_SECTION_NAMES
name|TRUE
block|,
else|#
directive|else
name|FALSE
block|,
endif|#
directive|endif
name|COFF_DEFAULT_SECTION_ALIGNMENT_POWER
block|,
name|coff_SWAP_filehdr_in
block|,
name|coff_SWAP_aouthdr_in
block|,
name|coff_SWAP_scnhdr_in
block|,
name|coff_SWAP_reloc_in
block|,
name|ticoff1_bad_format_hook
block|,
name|coff_set_arch_mach_hook
block|,
name|coff_mkobject_hook
block|,
name|styp_to_sec_flags
block|,
name|coff_set_alignment_hook
block|,
name|coff_slurp_symbol_table
block|,
name|symname_in_debug_hook
block|,
name|coff_pointerize_aux_hook
block|,
name|coff_print_aux
block|,
name|coff_reloc16_extra_cases
block|,
name|coff_reloc16_estimate
block|,
name|coff_classify_symbol
block|,
name|coff_compute_section_file_positions
block|,
name|coff_start_final_link
block|,
name|coff_relocate_section
block|,
name|coff_rtype_to_howto
block|,
name|coff_adjust_symndx
block|,
name|coff_link_add_one_symbol
block|,
name|coff_link_output_has_begun
block|,
name|coff_final_link_postscript
block|}
decl_stmt|;
end_decl_stmt

end_unit

